"use strict";

var tap = require("tap");

var totp = require("../app/totp");
var base32Encode = totp.base32Encode;

tap.test("base-32 encoding should be accurate", function (t) {
	t.equal(base32Encode(Buffer.from([18, 147, 227, 103, 150, 44, 53, 23, 59, 186, 91, 243, 54, 3, 165, 33, 145, 78, 254, 4, 158, 109])), "CKJ6GZ4WFQ2ROO52LPZTMA5FEGIU57QETZWQ");
	t.equal(base32Encode(Buffer.from([32, 247, 181, 148, 230, 247, 220, 9, 79, 6, 205, 251, 238, 44, 236, 78, 101, 119, 136, 39, 7, 78, 119])), "ED33LFHG67OASTYGZX564LHMJZSXPCBHA5HHO");
	t.equal(base32Encode(Buffer.from([82, 151, 36, 249])), "KKLSJ6I");
	t.equal(base32Encode(Buffer.from([186, 209, 152, 87, 14, 53, 22, 176, 121, 205, 61, 45, 77, 2, 248, 26])), "XLIZQVYOGULLA6ONHUWU2AXYDI");
	t.equal(base32Encode(Buffer.from([234, 213, 102, 154, 51, 66, 25, 226])), "5LKWNGRTIIM6E");
	t.equal(base32Encode(Buffer.from([188, 17, 171, 158, 240, 12, 179, 93, 237, 210, 80, 68, 54, 155])), "XQI2XHXQBSZV33OSKBCDNGY");
	t.equal(base32Encode(Buffer.from([91, 73, 109, 165, 66, 92, 230, 42, 3, 217, 179, 162, 59, 139, 122, 160, 119, 117, 215, 172, 55, 80, 14])), "LNEW3JKCLTTCUA6ZWORDXC32UB3XLV5MG5IA4");
	t.equal(base32Encode(Buffer.from([114, 95, 248, 0, 128, 17, 214, 218, 23, 230, 194, 105, 55, 229, 34, 72, 89, 235, 236, 229, 21, 100, 130, 195])), "OJP7QAEACHLNUF7GYJUTPZJCJBM6X3HFCVSIFQY");
	t.equal(base32Encode(Buffer.from([161, 209, 149])), "UHIZK");
	t.equal(base32Encode(Buffer.from([40, 162, 51])), "FCRDG");
	t.equal(base32Encode(Buffer.from([2, 102, 7, 169, 21, 30, 79, 131, 71, 109, 90, 77, 87])), "AJTAPKIVDZHYGR3NLJGVO");
	t.equal(base32Encode(Buffer.from([242, 49, 110, 21, 226, 120, 176, 196, 68, 180, 79, 179, 233, 19, 10, 165, 114, 169, 75, 96, 116, 38, 67, 132, 106, 51, 124, 237])), "6IYW4FPCPCYMIRFUJ6Z6SEYKUVZKSS3AOQTEHBDKGN6O2");
	t.equal(base32Encode(Buffer.from([195, 109, 193, 206, 136, 123, 17, 240, 91, 106, 145, 186, 231, 105, 211])), "YNW4DTUIPMI7AW3KSG5OO2OT");
	t.equal(base32Encode(Buffer.from([83, 143, 237, 181, 16, 152, 126, 188, 245, 221, 49, 36, 201, 51])), "KOH63NIQTB7LZ5O5GESMSMY");
	t.equal(base32Encode(Buffer.from([188, 116, 46, 111, 182, 27, 230, 122, 147, 183, 223, 158, 163, 182, 9, 185, 14, 144, 45, 218, 30, 64])), "XR2C435WDPTHVE5X36PKHNQJXEHJALO2DZAA");
	t.equal(base32Encode(Buffer.from([100, 194])), "MTBA");
	t.equal(base32Encode(Buffer.from([140, 162, 86, 179, 15, 103])), "RSRFNMYPM4");
	t.equal(base32Encode(Buffer.from([119, 170, 223])), "O6VN6");
	t.equal(base32Encode(Buffer.from([75, 104, 167, 231, 145])), "JNUKPZ4R");
	t.equal(base32Encode(Buffer.from([216, 45, 206, 228, 159, 22, 36, 119, 61, 210, 213, 193, 49, 115, 164, 1, 94, 244, 235, 111, 33, 163, 216, 234, 45, 69, 183])), "3AW45ZE7CYSHOPOS2XATC45EAFPPJ23PEGR5R2RNIW3Q");
	t.equal(base32Encode(Buffer.from([219, 195, 35, 84, 1, 57, 73, 11, 181, 81, 227, 219])), "3PBSGVABHFEQXNKR4PNQ");
	t.equal(base32Encode(Buffer.from([210, 108, 64, 236, 103, 52, 215, 237, 104, 137, 7, 90, 14, 185, 106, 102, 193, 179, 139])), "2JWEB3DHGTL622EJA5NA5OLKM3A3HCY");
	t.equal(base32Encode(Buffer.from([43, 111, 25, 129, 193, 197, 205, 91, 151, 23, 124, 166, 23, 201, 203, 158, 148, 3, 251, 137, 120, 43, 71, 231, 129, 152, 66, 51, 167])), "FNXRTAOBYXGVXFYXPSTBPSOLT2KAH64JPAVUPZ4BTBBDHJY");
	t.equal(base32Encode(Buffer.from([252, 71, 156, 131, 164, 239, 214, 71, 142, 242, 114, 247, 62, 91, 48, 8, 79, 83, 48, 159, 65, 182, 201, 129, 39, 100, 33, 133])), "7RDZZA5E57LEPDXSOL3T4WZQBBHVGME7IG3MTAJHMQQYK");
	t.equal(base32Encode(Buffer.from([225, 0, 13, 183, 196, 76, 229, 95, 192, 131, 79, 45, 162, 204, 73, 170, 207, 158, 219, 62, 9, 142, 180, 40])), "4EAA3N6EJTSV7QEDJ4W2FTCJVLHZ5WZ6BGHLIKA");
	t.equal(base32Encode(Buffer.from([52, 125, 195, 2, 141, 224, 83, 52, 26, 169, 106, 18])), "GR64GAUN4BJTIGVJNIJA");
	t.equal(base32Encode(Buffer.from([242, 39, 140, 160, 168, 169, 168, 151, 179, 47, 102, 49, 5, 234, 218, 124])), "6ITYZIFIVGUJPMZPMYYQL2W2PQ");
	t.equal(base32Encode(Buffer.from([154, 122, 253, 81, 187, 48, 218, 15, 41, 249, 98, 109, 105])), "TJ5P2UN3GDNA6KPZMJWWS");
	t.equal(base32Encode(Buffer.from([36, 200, 213, 202])), "ETENLSQ");
	t.equal(base32Encode(Buffer.from([117, 199, 60, 145, 32, 247, 114])), "OXDTZEJA65ZA");
	t.equal(base32Encode(Buffer.from([6, 86, 226, 240, 69, 223, 6, 98, 230, 224, 118, 63, 119, 207, 209, 83, 111, 9, 173, 84, 124, 254, 68, 100, 61, 253, 219])), "AZLOF4CF34DGFZXAOY7XPT6RKNXQTLKUPT7EIZB57XNQ");
	t.equal(base32Encode(Buffer.from([53, 211, 74, 103, 175, 48, 128, 158, 237])), "GXJUUZ5PGCAJ53I");
	t.equal(base32Encode(Buffer.from([29, 100, 125, 108, 74, 254, 30, 109, 15, 154, 88, 190, 86, 62, 30, 176])), "DVSH23CK7YPG2D42LC7FMPQ6WA");
	t.equal(base32Encode(Buffer.from([100, 53, 16])), "MQ2RA");
	t.equal(base32Encode(Buffer.from([198, 163, 102, 74, 170, 60, 183, 53, 176, 124])), "Y2RWMSVKHS3TLMD4");
	t.equal(base32Encode(Buffer.from([246, 117, 72, 40, 113, 177, 247, 142, 114, 25, 0, 88, 70, 40, 203, 156, 216, 123, 132, 54, 20, 206, 67, 66, 24, 66, 13, 253, 42])), "6Z2UQKDRWH3Y44QZABMEMKGLTTMHXBBWCTHEGQQYIIG72KQ");
	t.equal(base32Encode(Buffer.from([143, 245, 82, 50, 178])), "R72VEMVS");
	t.equal(base32Encode(Buffer.from([142, 251, 238])), "R3564");
	t.equal(base32Encode(Buffer.from([101, 69, 140, 240, 85, 109, 25, 136, 212, 101, 221, 197, 65, 149, 202, 21])), "MVCYZ4CVNUMYRVDF3XCUDFOKCU");
	t.equal(base32Encode(Buffer.from([135, 247, 231, 192, 215, 46, 206, 110, 81, 65, 240, 218, 84, 30, 219, 11, 163, 149])), "Q736PQGXF3HG4UKB6DNFIHW3BORZK");
	t.equal(base32Encode(Buffer.from([131, 17, 69, 221, 71, 250, 52, 155, 68, 98, 219, 233, 65, 6, 88, 190, 134, 120, 220, 251, 58, 60, 0, 244, 20, 22, 237, 175])), "QMIULXKH7I2JWRDC3PUUCBSYX2DHRXH3HI6AB5AUC3W26");
	t.equal(base32Encode(Buffer.from([69, 166, 23, 177, 170, 230, 36, 103, 212, 97, 96, 66, 218, 94, 166, 104])), "IWTBPMNK4YSGPVDBMBBNUXVGNA");
	t.equal(base32Encode(Buffer.from([237, 141, 228, 223, 252, 97, 58, 164, 145, 142, 108, 218, 50, 112, 250, 122, 175, 176, 136, 71, 108, 159, 1, 5, 227])), "5WG6JX74ME5KJEMONTNDE4H2PKX3BCCHNSPQCBPD");
	t.equal(base32Encode(Buffer.from([17, 252, 177, 109, 134, 74, 175, 170, 173, 192, 117, 152, 53, 93, 247, 81, 195, 252, 174, 86, 178, 211, 149, 156, 252])), "CH6LC3MGJKX2VLOAOWMDKXPXKHB7ZLSWWLJZLHH4");
	t.equal(base32Encode(Buffer.from([43, 62, 180, 217, 37, 189, 2, 167, 146, 5, 6, 29, 85, 130, 57, 132, 52, 228, 33, 37, 251, 138, 110, 211, 78, 27])), "FM7LJWJFXUBKPEQFAYOVLARZQQ2OIIJF7OFG5U2ODM");
	t.equal(base32Encode(Buffer.from([62, 81, 250, 155, 183, 42, 42, 182, 83, 231, 3, 174, 12, 143, 94])), "HZI7VG5XFIVLMU7HAOXAZD26");
	t.equal(base32Encode(Buffer.from([175, 178, 34, 133, 141, 102, 202])), "V6ZCFBMNM3FA");
	t.equal(base32Encode(Buffer.from([178, 73, 12, 159, 165, 69, 219, 42, 173, 195, 161, 189, 35, 100, 156, 118, 15, 23, 133, 207, 167, 254])), "WJEQZH5FIXNSVLODUG6SGZE4OYHRPBOPU77A");
	t.equal(base32Encode(Buffer.from([105, 15, 51])), "NEHTG");
	t.equal(base32Encode(Buffer.from([49, 224, 235, 53, 131, 233, 144, 133, 181, 209, 51, 7, 196, 97, 138, 182, 155])), "GHQOWNMD5GIILNORGMD4IYMKW2NQ");
	t.equal(base32Encode(Buffer.from([218, 148, 112, 179, 100, 73, 192, 14, 243, 107, 95, 142, 193, 186, 110, 140, 120, 182, 113, 164, 119, 88, 189])), "3KKHBM3EJHAA543LL6HMDOTORR4LM4NEO5ML2");
	t.equal(base32Encode(Buffer.from([230, 80, 83, 37, 80, 86, 9, 104, 16, 120, 168, 167, 114, 215, 142, 163, 215, 185, 180, 166, 183, 24, 191, 87, 94, 24, 233])), "4ZIFGJKQKYEWQEDYVCTXFV4OUPL3TNFGW4ML6V26DDUQ");
	t.equal(base32Encode(Buffer.from([248, 7, 42, 47, 161, 21, 235, 223, 7, 67, 102, 21, 124, 35, 134, 15, 102, 23, 86, 147, 207, 27, 118, 249, 229])), "7ADSUL5BCXV56B2DMYKXYI4GB5TBOVUTZ4NXN6PF");
	t.equal(base32Encode(Buffer.from([124])), "PQ");
	t.equal(base32Encode(Buffer.from([179, 98, 226, 157, 146, 208, 92, 183, 239, 189, 104, 226, 204, 65, 128, 151, 217, 234, 26, 199, 183, 186])), "WNROFHMS2BOLP355NDRMYQMAS7M6UGWHW65A");
	t.equal(base32Encode(Buffer.from([3, 111, 242, 34, 17, 205, 142, 221, 177, 52, 11, 159, 16, 44, 234, 199, 192, 255, 231, 134, 6, 234, 199, 58, 64, 135, 249, 17])), "ANX7EIQRZWHN3MJUBOPRALHKY7AP7Z4GA3VMOOSAQ74RC");
	t.equal(base32Encode(Buffer.from([31, 160, 47, 160, 213, 5, 223, 243, 119, 105, 206, 91, 147, 51, 64, 119])), "D6QC7IGVAXP7G53JZZNZGM2AO4");
	t.equal(base32Encode(Buffer.from([252, 246, 230, 65, 51, 21])), "7T3OMQJTCU");
	t.equal(base32Encode(Buffer.from([83, 43, 109, 123, 6, 157])), "KMVW26YGTU");
	t.equal(base32Encode(Buffer.from([127, 152, 164, 134, 111, 122, 166])), "P6MKJBTPPKTA");
	t.equal(base32Encode(Buffer.from([222, 139, 170, 113, 229, 136, 8, 113, 4, 242, 36, 108, 9, 8, 76, 110, 186, 186, 200, 129, 91, 224, 199])), "32F2U4PFRAEHCBHSERWASCCMN25LVSEBLPQMO");
	t.equal(base32Encode(Buffer.from([252, 16, 232, 229, 104, 205, 8, 32, 2, 2, 104, 157, 71, 110, 93])), "7QIORZLIZUECAAQCNCOUO3S5");
	t.equal(base32Encode(Buffer.from([16, 199, 207, 60, 201, 46, 37, 0, 45, 73, 17, 182, 98, 107, 187, 40, 232, 28, 209, 111, 52, 77, 71, 175])), "CDD46PGJFYSQALKJCG3GE253FDUBZULPGRGUPLY");
	t.equal(base32Encode(Buffer.from([203, 44, 200, 209, 93, 114, 124, 116])), "ZMWMRUK5OJ6HI");
	t.equal(base32Encode(Buffer.from([96, 85, 39, 87, 214, 202, 236, 137, 247, 51, 6, 195, 100, 245, 93, 154, 60, 140, 171])), "MBKSOV6WZLWIT5ZTA3BWJ5K5TI6IZKY");
	t.equal(base32Encode(Buffer.from([142, 166, 148, 221, 185, 0, 187, 179, 151, 244, 6, 234, 106, 27, 124, 77, 67, 215, 68, 232, 130, 144, 98, 50, 228, 31, 12, 204, 140])), "R2TJJXNZAC53HF7UA3VGUG34JVB5ORHIQKIGEMXED4GMZDA");
	t.equal(base32Encode(Buffer.from([162, 153, 15, 204, 255, 84, 32, 252, 171, 215, 39, 54, 184, 131, 4, 179, 58, 126, 222, 234, 32, 48, 103, 62, 71, 80, 243, 222])), "UKMQ7TH7KQQPZK6XE43LRAYEWM5H5XXKEAYGOPSHKDZ54");
	t.equal(base32Encode(Buffer.from([168, 162, 57, 253, 147, 69, 27, 203])), "VCRDT7MTIUN4W");
	t.equal(base32Encode(Buffer.from([247, 50, 193, 145, 39, 29, 12, 153, 133, 70, 6, 178, 206, 184, 8, 178, 199, 116, 176, 197, 217, 239, 182, 112, 236, 119])), "64ZMDEJHDUGJTBKGA2ZM5OAIWLDXJMGF3HX3M4HMO4");
	t.equal(base32Encode(Buffer.from([115, 179, 90, 55, 244])), "OOZVUN7U");
	t.equal(base32Encode(Buffer.from([241, 56, 207, 55, 157, 236])), "6E4M6N455Q");
	t.equal(base32Encode(Buffer.from([212, 33, 103, 168, 164, 37, 27, 183, 167, 16, 232, 63, 171, 244, 46, 58, 106])), "2QQWPKFEEUN3PJYQ5A72X5BOHJVA");
	t.equal(base32Encode(Buffer.from([21, 94, 10, 56, 126, 126, 243, 50, 9, 225, 154, 145, 241, 142, 191])), "CVPAUOD6P3ZTECPBTKI7DDV7");
	t.equal(base32Encode(Buffer.from([186, 186, 62, 214])), "XK5D5VQ");
	t.equal(base32Encode(Buffer.from([235, 61, 32, 135, 165, 153, 84, 58, 18, 95, 78, 93, 122, 220, 15, 22, 106, 111, 90, 79, 26, 228, 10, 82, 99, 109])), "5M6SBB5FTFKDUES7JZOXVXAPCZVG6WSPDLSAUUTDNU");
	t.equal(base32Encode(Buffer.from([12, 47, 148, 136, 70])), "BQXZJCCG");
	t.equal(base32Encode(Buffer.from([215, 236, 176, 202, 95, 140, 26, 131, 122, 71, 226, 193, 158, 186, 92, 218, 32, 118, 108, 84, 35])), "27WLBSS7RQNIG6SH4LAZ5OS43IQHM3CUEM");
	t.equal(base32Encode(Buffer.from([241, 184, 30, 54, 64, 188, 45, 70, 84, 179, 176, 229, 112, 208, 246, 206, 32, 135, 36, 26, 94, 139])), "6G4B4NSAXQWUMVFTWDSXBUHWZYQIOJA2L2FQ");
	t.equal(base32Encode(Buffer.from([8, 166, 207, 19, 136, 134, 165, 86, 40, 72, 5, 87])), "BCTM6E4IQ2SVMKCIAVLQ");
	t.equal(base32Encode(Buffer.from([243, 133, 79, 239, 238, 162, 145, 23, 206, 154])), "6OCU737OUKIRPTU2");
	t.equal(base32Encode(Buffer.from([148, 12, 68, 200, 106, 120, 150, 70, 135, 42, 208, 93, 19, 154, 243, 18, 239, 156, 183])), "SQGEJSDKPCLENBZK2BORHGXTCLXZZNY");
	t.equal(base32Encode(Buffer.from([222, 231, 44, 177, 240, 20, 34, 8, 188, 227, 231, 3, 106, 228, 107, 20, 127, 165, 147, 228, 66, 152, 201, 49, 144, 12, 118, 97])), "33TSZMPQCQRARPHD44BWVZDLCR72LE7EIKMMSMMQBR3GC");
	t.equal(base32Encode(Buffer.from([252, 89, 66, 48, 238, 79, 56, 46, 20, 67, 189, 199])), "7RMUEMHOJ44C4FCDXXDQ");
	t.equal(base32Encode(Buffer.from([248, 199, 145, 109, 205, 98, 240, 94, 114, 135, 111, 59, 58, 20, 64, 249, 66, 113, 115, 82, 28, 193, 205, 223, 165, 165, 86, 19])), "7DDZC3ONMLYF44UHN45TUFCA7FBHC42SDTA43X5FUVLBG");
	t.equal(base32Encode(Buffer.from([241, 198, 82, 204, 15, 182, 210])), "6HDFFTAPW3JA");
	t.equal(base32Encode(Buffer.from([193, 130, 214, 198, 9, 122, 57, 250, 47, 207, 97, 21, 61, 51, 101, 143, 10, 26, 186, 99, 129, 246, 165, 221])), "YGBNNRQJPI47UL6PMEKT2M3FR4FBVOTDQH3KLXI");
	t.equal(base32Encode(Buffer.from([38, 105, 78, 127, 84, 19, 169, 167, 32, 205, 129, 124, 4, 232])), "EZUU472UCOU2OIGNQF6AJ2A");
	t.equal(base32Encode(Buffer.from([52, 250, 32, 194, 76, 88, 120, 0, 190, 201, 195, 76, 64, 16, 82, 206, 182, 86, 122, 63, 103, 1, 142, 153, 245, 100])), "GT5CBQSMLB4ABPWJYNGEAECSZ23FM6R7M4AY5GPVMQ");
	t.equal(base32Encode(Buffer.from([75, 209, 120, 231, 188, 112, 211, 67, 159, 156, 227, 252, 189, 38, 24, 180, 115, 44, 216, 38, 229, 9, 234, 165, 196, 236])), "JPIXRZ54ODJUHH444P6L2JQYWRZSZWBG4UE6VJOE5Q");
	t.equal(base32Encode(Buffer.from([189, 58, 133, 83, 250, 242, 248, 136, 112, 6])), "XU5IKU726L4IQ4AG");
	t.equal(base32Encode(Buffer.from([45, 4, 14, 212, 41, 142, 175, 134, 57, 79, 78, 101, 137])), "FUCA5VBJR2XYMOKPJZSYS");
	t.equal(base32Encode(Buffer.from([93, 147, 51, 219, 226])), "LWJTHW7C");
	t.equal(base32Encode(Buffer.from([233, 231, 49, 15, 183, 151, 51, 37, 5, 103, 90, 137])), "5HTTCD5XS4ZSKBLHLKEQ");
	t.equal(base32Encode(Buffer.from([10, 157, 142, 184, 0, 174, 180, 226, 192, 22, 212])), "BKOY5OAAV22OFQAW2Q");
	t.equal(base32Encode(Buffer.from([187, 132, 19, 203, 122, 19, 228, 211, 36, 42])), "XOCBHS32CPSNGJBK");
	t.equal(base32Encode(Buffer.from([255, 215, 217, 101, 232, 70, 131, 42, 109, 82, 78, 85, 75])), "77L5SZPII2BSU3KSJZKUW");
	t.equal(base32Encode(Buffer.from([181, 66, 81])), "WVBFC");
	t.equal(base32Encode(Buffer.from([7, 127, 85, 61, 235, 194, 109, 245, 45, 219, 23, 10, 251])), "A57VKPPLYJW7KLO3C4FPW");
	t.equal(base32Encode(Buffer.from([34, 91, 96, 122, 208, 101, 121])), "EJNWA6WQMV4Q");
	t.equal(base32Encode(Buffer.from([79, 158, 154, 215, 219, 53, 82, 12, 110, 248, 204, 119, 123, 210, 9, 2, 90, 28])), "J6PJVV63GVJAY3XYZR3XXUQJAJNBY");
	t.end();
});
